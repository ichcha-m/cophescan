// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pars2pik
arma::mat pars2pik(arma::vec params, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_pars2pik(SEXP paramsSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(pars2pik(params, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// logsumexp
double logsumexp(arma::rowvec x);
RcppExport SEXP _cophescan_logsumexp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp(x));
    return rcpp_result_gen;
END_RCPP
}
// logpost
arma::mat logpost(arma::vec params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_logpost(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(logpost(params, lbf_mat, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// loglik
double loglik(arma::vec params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_loglik(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(loglik(params, lbf_mat, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// get_posterior_prob
arma::mat get_posterior_prob(arma::vec params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_get_posterior_prob(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(get_posterior_prob(params, lbf_mat, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// sample_alpha
arma::vec sample_alpha(double alpha_mean, double alpha_sd);
RcppExport SEXP _cophescan_sample_alpha(SEXP alpha_meanSEXP, SEXP alpha_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha_mean(alpha_meanSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sd(alpha_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_alpha(alpha_mean, alpha_sd));
    return rcpp_result_gen;
END_RCPP
}
// sample_beta
arma::vec sample_beta(double beta_shape, double beta_scale);
RcppExport SEXP _cophescan_sample_beta(SEXP beta_shapeSEXP, SEXP beta_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type beta_shape(beta_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_scale(beta_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_beta(beta_shape, beta_scale));
    return rcpp_result_gen;
END_RCPP
}
// sample_gamma
arma::vec sample_gamma(double gamma_shape, double gamma_scale);
RcppExport SEXP _cophescan_sample_gamma(SEXP gamma_shapeSEXP, SEXP gamma_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type gamma_shape(gamma_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_gamma(gamma_shape, gamma_scale));
    return rcpp_result_gen;
END_RCPP
}
// logd_alpha
double logd_alpha(double a, double alpha_mean, double alpha_sd);
RcppExport SEXP _cophescan_logd_alpha(SEXP aSEXP, SEXP alpha_meanSEXP, SEXP alpha_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mean(alpha_meanSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sd(alpha_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(logd_alpha(a, alpha_mean, alpha_sd));
    return rcpp_result_gen;
END_RCPP
}
// logd_beta
double logd_beta(double b, double beta_shape, double beta_scale);
RcppExport SEXP _cophescan_logd_beta(SEXP bSEXP, SEXP beta_shapeSEXP, SEXP beta_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type beta_shape(beta_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_scale(beta_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(logd_beta(b, beta_shape, beta_scale));
    return rcpp_result_gen;
END_RCPP
}
// logd_gamma
double logd_gamma(double g, double gamma_shape, double gamma_scale);
RcppExport SEXP _cophescan_logd_gamma(SEXP gSEXP, SEXP gamma_shapeSEXP, SEXP gamma_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_shape(gamma_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(logd_gamma(g, gamma_shape, gamma_scale));
    return rcpp_result_gen;
END_RCPP
}
// logpriors
double logpriors(arma::vec params, bool rg, double alpha_mean, double alpha_sd, double beta_shape, double beta_scale, double gamma_shape, double gamma_scale);
RcppExport SEXP _cophescan_logpriors(SEXP paramsSEXP, SEXP rgSEXP, SEXP alpha_meanSEXP, SEXP alpha_sdSEXP, SEXP beta_shapeSEXP, SEXP beta_scaleSEXP, SEXP gamma_shapeSEXP, SEXP gamma_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mean(alpha_meanSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sd(alpha_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_shape(beta_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_scale(beta_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_shape(gamma_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(logpriors(params, rg, alpha_mean, alpha_sd, beta_shape, beta_scale, gamma_shape, gamma_scale));
    return rcpp_result_gen;
END_RCPP
}
// target
double target(arma::vec params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_target(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(target(params, lbf_mat, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// propose
arma::vec propose(arma::vec params, double propsd);
RcppExport SEXP _cophescan_propose(SEXP paramsSEXP, SEXP propsdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< double >::type propsd(propsdSEXP);
    rcpp_result_gen = Rcpp::wrap(propose(params, propsd));
    return rcpp_result_gen;
END_RCPP
}
// pars_init
arma::vec pars_init(bool rg, double alpha_mean, double alpha_sd, double beta_shape, double beta_scale, double gamma_shape, double gamma_scale);
RcppExport SEXP _cophescan_pars_init(SEXP rgSEXP, SEXP alpha_meanSEXP, SEXP alpha_sdSEXP, SEXP beta_shapeSEXP, SEXP beta_scaleSEXP, SEXP gamma_shapeSEXP, SEXP gamma_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mean(alpha_meanSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sd(alpha_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_shape(beta_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_scale(beta_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_shape(gamma_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(pars_init(rg, alpha_mean, alpha_sd, beta_shape, beta_scale, gamma_shape, gamma_scale));
    return rcpp_result_gen;
END_RCPP
}
// metrop_run
List metrop_run(arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, bool rg, int nits, int thin, double alpha_mean, double alpha_sd, double beta_shape, double beta_scale, double gamma_shape, double gamma_scale);
RcppExport SEXP _cophescan_metrop_run(SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP, SEXP nitsSEXP, SEXP thinSEXP, SEXP alpha_meanSEXP, SEXP alpha_sdSEXP, SEXP beta_shapeSEXP, SEXP beta_scaleSEXP, SEXP gamma_shapeSEXP, SEXP gamma_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    Rcpp::traits::input_parameter< int >::type nits(nitsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_mean(alpha_meanSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_sd(alpha_sdSEXP);
    Rcpp::traits::input_parameter< double >::type beta_shape(beta_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type beta_scale(beta_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_shape(gamma_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_scale(gamma_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(metrop_run(lbf_mat, nsnps, rg_vec, rg, nits, thin, alpha_mean, alpha_sd, beta_shape, beta_scale, gamma_shape, gamma_scale));
    return rcpp_result_gen;
END_RCPP
}
// posterior_prob
List posterior_prob(arma::mat params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_posterior_prob(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(posterior_prob(params, lbf_mat, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// piks
List piks(arma::mat params, NumericVector nsnps, NumericVector rg_vec, bool rg);
RcppExport SEXP _cophescan_piks(SEXP paramsSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(piks(params, nsnps, rg_vec, rg));
    return rcpp_result_gen;
END_RCPP
}
// average_posterior_prob_list
arma::mat average_posterior_prob_list(arma::mat params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, int nits, int thin, bool rg);
RcppExport SEXP _cophescan_average_posterior_prob_list(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP nitsSEXP, SEXP thinSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nits(nitsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(average_posterior_prob_list(params, lbf_mat, nsnps, rg_vec, nits, thin, rg));
    return rcpp_result_gen;
END_RCPP
}
// average_posterior_prob
arma::mat average_posterior_prob(arma::mat params, arma::mat lbf_mat, NumericVector nsnps, NumericVector rg_vec, int nits, int thin, bool rg);
RcppExport SEXP _cophescan_average_posterior_prob(SEXP paramsSEXP, SEXP lbf_matSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP nitsSEXP, SEXP thinSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lbf_mat(lbf_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nits(nitsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(average_posterior_prob(params, lbf_mat, nsnps, rg_vec, nits, thin, rg));
    return rcpp_result_gen;
END_RCPP
}
// average_piks_list
arma::mat average_piks_list(arma::mat params, NumericVector nsnps, NumericVector rg_vec, int nits, int thin, bool rg);
RcppExport SEXP _cophescan_average_piks_list(SEXP paramsSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP nitsSEXP, SEXP thinSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nits(nitsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(average_piks_list(params, nsnps, rg_vec, nits, thin, rg));
    return rcpp_result_gen;
END_RCPP
}
// average_piks
arma::mat average_piks(arma::mat params, NumericVector nsnps, NumericVector rg_vec, int nits, int thin, bool rg);
RcppExport SEXP _cophescan_average_piks(SEXP paramsSEXP, SEXP nsnpsSEXP, SEXP rg_vecSEXP, SEXP nitsSEXP, SEXP thinSEXP, SEXP rgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type nsnps(nsnpsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rg_vec(rg_vecSEXP);
    Rcpp::traits::input_parameter< int >::type nits(nitsSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< bool >::type rg(rgSEXP);
    rcpp_result_gen = Rcpp::wrap(average_piks(params, nsnps, rg_vec, nits, thin, rg));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cophescan_pars2pik", (DL_FUNC) &_cophescan_pars2pik, 4},
    {"_cophescan_logsumexp", (DL_FUNC) &_cophescan_logsumexp, 1},
    {"_cophescan_logpost", (DL_FUNC) &_cophescan_logpost, 5},
    {"_cophescan_loglik", (DL_FUNC) &_cophescan_loglik, 5},
    {"_cophescan_get_posterior_prob", (DL_FUNC) &_cophescan_get_posterior_prob, 5},
    {"_cophescan_sample_alpha", (DL_FUNC) &_cophescan_sample_alpha, 2},
    {"_cophescan_sample_beta", (DL_FUNC) &_cophescan_sample_beta, 2},
    {"_cophescan_sample_gamma", (DL_FUNC) &_cophescan_sample_gamma, 2},
    {"_cophescan_logd_alpha", (DL_FUNC) &_cophescan_logd_alpha, 3},
    {"_cophescan_logd_beta", (DL_FUNC) &_cophescan_logd_beta, 3},
    {"_cophescan_logd_gamma", (DL_FUNC) &_cophescan_logd_gamma, 3},
    {"_cophescan_logpriors", (DL_FUNC) &_cophescan_logpriors, 8},
    {"_cophescan_target", (DL_FUNC) &_cophescan_target, 5},
    {"_cophescan_propose", (DL_FUNC) &_cophescan_propose, 2},
    {"_cophescan_pars_init", (DL_FUNC) &_cophescan_pars_init, 7},
    {"_cophescan_metrop_run", (DL_FUNC) &_cophescan_metrop_run, 12},
    {"_cophescan_posterior_prob", (DL_FUNC) &_cophescan_posterior_prob, 5},
    {"_cophescan_piks", (DL_FUNC) &_cophescan_piks, 4},
    {"_cophescan_average_posterior_prob_list", (DL_FUNC) &_cophescan_average_posterior_prob_list, 7},
    {"_cophescan_average_posterior_prob", (DL_FUNC) &_cophescan_average_posterior_prob, 7},
    {"_cophescan_average_piks_list", (DL_FUNC) &_cophescan_average_piks_list, 6},
    {"_cophescan_average_piks", (DL_FUNC) &_cophescan_average_piks, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_cophescan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
